{"ast":null,"code":"exports.every = function (str) {\n  return new Every(str);\n};\n\n/*\n  Time map\n*/\n\nvar time = {\n  millisecond: 1,\n  second: 1000,\n  minute: 60000,\n  hour: 3600000,\n  day: 86400000\n};\nfor (var key in time) {\n  if (key === 'millisecond') {\n    time.ms = time[key];\n  } else {\n    time[key.charAt(0)] = time[key];\n  }\n  time[key + 's'] = time[key];\n}\n\n/*\n  Every constructor\n*/\n\nfunction Every(str) {\n  this.count = 0;\n  var m = parse(str);\n  if (m) {\n    this.time = Number(m[0]) * time[m[1]];\n    this.type = m[1];\n  }\n}\nEvery.prototype.do = function (cb) {\n  if (this.time) {\n    this.interval = setInterval(callback, this.time);\n  }\n  var that = this;\n  function callback() {\n    that.count++;\n    cb.call(that);\n  }\n  return this;\n};\nEvery.prototype.stop = function () {\n  if (this.interval) {\n    clearInterval(this.interval);\n    delete this.interval;\n  }\n  return this;\n};\n\n/*\n  Convert string to milliseconds\n\n    ms, millisecond(s)?\n    s, second(s)?\n    m, minute(s)?\n    h, hour(s)?\n    d, day(s)?\n*/\nvar reg = /^\\s*(\\d+(?:\\.\\d+)?)\\s*([a-z]+)\\s*$/;\nfunction parse(str) {\n  var m = str.match(reg);\n  if (m && time[m[2]]) {\n    return m.slice(1);\n  }\n  return null;\n}","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}